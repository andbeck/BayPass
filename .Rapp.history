load('~/alan/R/Robj/datUse.clean.Rdata')
ls()
head(datUse)
alleleC1<-datUse$dp.down#
alleleC1<-datUse$ad.down#
ss<-datUse$ad+datUse$dp
rownames(alleleC1)<- datUse$pop
alleleC1<-data.frame(datUse$dp.down)#
alleleC1<-data.frame(datUse$ad.down)#
ss<-data.frame(datUse$ad+datUse$dp)
rownames(alleleC1)<- datUse$pop
levels(datUse$pop)
levels(factor(datUse$pop))
head(datUse$pop)
tail(datUse$pop)
library(dplyr)
wrk<-filter(datUse, pop!="SoF")
alleleC1<-data.frame(wrk$dp.down)#
alleleC1<-data.frame(wrk$ad.down)#
ss<-data.frame(wrk$ad+wrk$dp)
out.temp<-interleave(alleleC1,alleleC2)
library(gdata)
install.packages('gdata')
library(gdata)
out.temp<-interleave(alleleC1,alleleC2)
alleleC2<-data.frame(wrk$ad.down)
out.temp<-interleave(alleleC1,alleleC2)
head(out.temp)
?interleave
out.temp<-interleave(t(alleleC1),t(alleleC2))
head(out.temp)
t(alleleC1)
alleleC1
alleleC1[1:10]
alleleC1[,1:10]
alleleC1[,1]
alleleC1[1:10,1]
rbind(alleleC1[1:10,1],alleleC2[1:10,1])
alleleC1<-data.frame(wrk$dp.down)#
alleleC2<-data.frame(wrk$ad.down)
rbind(alleleC1[1:10,1],alleleC2[1:10,1])
interleave(alleleC1[1:10,1],alleleC2[1:10,1])
interleave(t(alleleC1[1:10,1]),t(alleleC2[1:10,1]))
?interleave
a <- matrix(1:10,ncol=2,byrow=TRUE)#
b <- matrix(letters[1:10],ncol=2,byrow=TRUE)
a
b
interleave(a,b)
alleleCounts<-cbind(alleleC1, alleleC2)
alleleCounts(1:10,)
alleleCounts<-cbind(alleleC1, alleleC2)#
alleleCounts(1:10,)
alleleCounts[1:10,]
wrk2<-select(wrk, 1:10)
wrk2
# setups#
library(corrplot)#
library(ape)#
library(ggplot2)#
library(gridExtra)#
library(dplyr)#
library(ggthemes)#
#
source('baypass_utils.R') # this is in the repo#
#
# Covariance matrix#
omega<-as.matrix(read.table("anaprEnvfile__mat_omega.out"))#
omega<-matrix(omega, 8,8, byrow = TRUE, dimnames=list(c(paste("pop:",1:8)), c(paste("pop:",1:8))))#
#
omega_plot<-cov2cor(omega)#
par(mfrow = c(2,1))#
corrplot(omega_plot,method = "square", order = 'hclust',mar = c(2,1,1,0))#
plot(hclust(dist(omega_plot), 'complete'))#
#
# This needs to be developed to establish the criteria for detecting XtX outlier#
# DETAIL provided by Gautier
install.packages(c('corrplot','ape'))
# setups#
library(corrplot)#
library(ape)#
library(ggplot2)#
library(gridExtra)#
library(dplyr)#
library(ggthemes)#
#
source('baypass_utils.R') # this is in the repo#
#
# Covariance matrix#
omega<-as.matrix(read.table("anaprEnvfile__mat_omega.out"))#
omega<-matrix(omega, 8,8, byrow = TRUE, dimnames=list(c(paste("pop:",1:8)), c(paste("pop:",1:8))))#
#
omega_plot<-cov2cor(omega)#
par(mfrow = c(2,1))#
corrplot(omega_plot,method = "square", order = 'hclust',mar = c(2,1,1,0))#
plot(hclust(dist(omega_plot), 'complete'))#
#
# This needs to be developed to establish the criteria for detecting XtX outlier#
# DETAIL provided by Gautier
pi.params<-as.numeric(read.table("anaprEnvfile__summary_beta_params.out",h=T)[,2]) ##the parmeters of the Beta distribution
pi.params
poolsize<-as.numeric(read.table("poolsize")) #the original pool sizes
poolsize<-as.numeric(read.table("POOLSIZE")) #the original pool sizes
list.files()
poolsize<-as.numeric(read.table("SAMPLEFILE")) #the original pool sizes
poolsize
geno2YN
readcounts<-geno2YN("ALLELEFILE") # the orginal read counts (needed to sample from the observed coverages)
simulate.baypass(omega,nsnp=250000,#
	beta.pi = pi.params,#
	sample.size = poolsize, #
	coverage=readcounts$NN,#
	pi.maf = 0.01,#
	suffix="pods",#
	remove.fixed.loci = F)
